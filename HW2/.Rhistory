arima010$call
paste("arima", c("010", "110", "011", "111", "100", "001", "101"))
paste("arima", c("010", "110", "011", "111", "100", "001", "101"), sep = "")
arima110 <- arima(bank.ts, order = c(1,1,0))
arima011 <- arima(bank.ts, order = c(0,1,1))
arima111 <- arima(bank.ts, order = c(1,1,1))
arima100 <- arima(bank.ts, order = c(1,0,0))
arima001 <- arima(bank.ts, order = c(0,0,1))
arima101 <- arima(bank.ts, order = c(1,0,1))
parse(text = "x")
x <- 42
parse(text = "x")
as.name("arima010")
as.name("arima010")$call
mode(as.name("arima010"))
eval(parse("arima010"))
eval(arima010)
eval("arima010")
do.call("$", c(model, "call"))
model <- paste("arima", c("010", "110", "011", "111", "100", "001", "101"), sep = "")
model <- paste("arima", c("010", "110", "011", "111", "100", "001", "101"), sep = "")
do.call("$", c(model, "call"))
as.name("arima010")
call("arima010")
eval("arima010$call")
eval(2 ^ 2 ^ 3)
expression(2^2^3)
eval(expression(2^2^3))
eval(expression("arima010"))
print(arima010)
eval(parse("print(arima010)"))
eval(parse(text="print(arima010)"))
eval(parse(text = "arima010"))
eval(parse(text = "arima010$sigma2"))
eval(parse(text = c("arima010$sigma2", "arima011$sigma2")))
paste(model, "$sigma2")
paste(model, "$sigma2", sep="")
lapply(paste(model, "$sigma2", sep=""), function(x) eval(parse(text = x)))
sapply(paste(model, "$sigma2", sep=""), function(x) eval(parse(text = x)))
loglik <- sapply(paste(model, "$loglik", sep=""), function(x) eval(parse(text = x)))
loglik
aic <- sapply(paste(model, "$aic", sep=""), function(x) eval(parse(text = x)))
aic
model.comp <- data.frame(model = model, sigma2 = sigma2, loglik = loglik, aic = aic)
sigma2 <- sapply(paste(model, "$sigma2", sep=""), function(x) eval(parse(text = x)))
model.comp <- data.frame(model = model, sigma2 = sigma2, loglik = loglik, aic = aic)
model.comp
model.comp <- data.frame(sigma2 = sigma2, loglik = loglik, aic = aic, row.names = model)
model.comp
plot(model.comp)
forecast.Arima(arima111, h = 12)
plot(forecast.Arima(arima111, h = 12))
arima010
arima111$coef
tsdiag(arima111)
tsdiag(arima111)
auto.arima(bank.ts)
qqplot(arima111$residuals)
qqnorm(arima111$residuals)
qqline(arima111$residuals, col = "red")
auto.arima(diff(bank.ts, lag = 6))
arima210 <- arima(diff(bank.ts, lag = 6), order = c(2,0,0))
tsdiag(arima200)
tsdiag(arima210)
arima210
bank.ts.diff <- diff(bank.ts, lag = 6)
arima210 <- arima(bank.ts.diff, order = c(2,0,0))
tsdiag(arima210)
plot(arima210)
qqnorm(arima210$residuals)
qqline(arima210$residuals)
qqnorm(arima111$residuals)
qqline(arima111$residuals, col = "red")
tsdiag(arima111)
x <- tsdiag(arima111)
str(x)
x
arima111$residuals
plot(arima111$residuals)
str(arima111$residuals)
plot(arima111$residuals, type = h)
plot(arima111$residuals, type = "h")
plot(scale(arima111$residuals), type = "h")
plot(scale(arima111$residuals), type = "h")
plot(scale(arima111$residuals), type = "h", ylab = NULL, main = "Standardized Residuals")
plot(scale(arima111$residuals), type = "h", ylab = "", main = "Standardized Residuals")
acf(arima111$residuals)
acf(arima111$residuals, main = "ACF of residuals")
Box.test(arima111$residuals)
Box.test(arima111$residuals, lag = 12)
Box.test(arima111$residuals, type = "Ljung-Box")
lines(y = 0.5)
abline(y = 0.5)
abline(h = 0.5)
Box.test(arima111$residuals)
str(Box.test(arima111$residuals))
lapply(1:12, function(x) Box.test(arima111$residuals, type = "Ljung-Box")$p.value)
sapply(1:12, function(x) Box.test(arima111$residuals, type = "Ljung-Box", lag = x)$p.value)
abline(h = 0.05)
abline(h = 0.1, lty = 2)
bank.data <- read.table("ReserveBankofAusatraliadata.txt")
bank.ts <- ts(bank.data, frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
arima111 <- arima(bank.ts, order = c(1,1,1))
shapiro.test(arima111$residuals)
shapiro.test(rnorm(100, mean = 5, sd = 3))
library(forecast)
bank.ts
View(bank.data)
bank.ts <- ts(bank.data[1:nrow(bank.data)-3,1], frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
bank.ts <- ts(bank.data[1:(nrow(bank.data)-3),1], frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
forecast.Arima(arima111, h = 3, level = 99)
bank.data <- read.table("ReserveBankofAusatraliadata.txt")
bank.ts <- ts(bank.data[1:(nrow(bank.data)-3),1], frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
arima111 <- arima(bank.ts, order = c(1,1,1))
forecast.Arima(arima111, h = 3, level = 99)
bank.fcst <- forecast(arima111, h = 3, level = 99)
plot(bank.fcst)
lines(bank.ts)
lines(bank.ts, col = "red")
plot(bank.fcst)
bank.test.ts <- ts(bank.data[(nrow(bank.data)-2):nrow(bank.data),1], frequency = 12, start = c(1994, 6), names = "Monthly interest rate")
bank.test.ts
plot(bank.fcst)
lines(bank.test.ts, col = "red")
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.ts <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts
DJ.ts[1:6]
head(DJ.ts)
window(DJ.ts, start = c(1980,6))
window(DJ.ts, end = c(1980,7))
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.data <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts <- window(DJ.data, end = c(1980, 7))
DJ.test.ts <- window(DJ.data, start = c(1980,7))
acf(DJ.ts)
pacf(DJ.ts)
acf(diff(DJ.ts))
pacf(diff(DJ.ts))
plot.ts(diff(DJ.ts))
auto.arima(DJ.ts)
adf.test(diff(DJ.ts))
library(tseries)
adf.test(diff(DJ.ts))
Box.test(diff(DJ.ts))
Box.test(diff(DJ.ts), lag = 12)
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.data <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts <- window(DJ.data, end = c(1980, 7))
DJ.test.ts <- window(DJ.data, start = c(1980,7))
library(tseries)
library(forecast)
auto.arima(DJ.ts)
arima(DJ.ts, order = c(2, 0, 0))
arima(DJ.ts, order = c(2, 1, 0))
arima(DJ.ts, order = c(0, 1, 2))
arima(DJ.ts, order = c(0, 0, 2))
arima(DJ.ts, order = c(0, 1, 1))
arima(DJ.ts, order = c(1, 2, 1))
arima(DJ.ts, order = c(2, 2, 1))
arima(DJ.ts, order = c(1, 2, 2))
arima(DJ.ts, order = c(1, 2, 0))
arima(DJ.ts, order = c(0, 2, 1))
paste(c("arima", q, d, q), sep = "")
p = d = q = 1
paste(c("arima", q, d, q), sep = "")
paste(c("arima", q, d, q), collapse = "")
assign(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = (q, d, q)))
assign(paste(c("arima", q, d, q), collapse = ""), 2)
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), 2))
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), 3))
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = (q, d, q))))
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = (p, d, q))))
arima(DJ.ts, order = (p, d, q))
arima(DJ.ts, order = (p0, d, q))
arima(DJ.ts, order = (0, d, q))
arima(DJ.ts, order = (0, 1, 1))
arima(DJ.ts, order = (0,1,1))
assign(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q)))
arima111
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q))))
model <- c()
for (p in c(0,1,2)) {
for (d in c(0,1,2)) {
for (q in c(0,1,2)) {
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q))))
model <- c(model, paste(c("arima", q, d, q), collapse = ""))
}
}
}
for (p in c(0,1,2)) {
for (d in c(0,1,2)) {
for (q in c(0,1,2)) {
do.call("<-", list(paste(c("arima", p, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q))))
model <- c(model, paste(c("arima", p, d, q), collapse = ""))
}
}
}
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.data <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts <- window(DJ.data, end = c(1980, 7))
DJ.test.ts <- window(DJ.data, start = c(1980,7))
DJ.test.ts
arima212 <- arima(DJ.ts, order = c(2,1,2))
forecast(arima212, h = 1, level = 90)
forecast(arima212, h = c(1, 12), level = 90)
forecast(arima212, h = 12, level = 90)
forecast(arima212, h = 13, level = 90)
plot(forecast(arima212, h = 13, level = 90))
bank.fcst <- forecast(arima212, h = 13, level = 90)
plot(bank.fcst)
lines(bank.test.ts, col = "red")
DJ.fcst <- forecast(arima212, h = 13, level = 90)
plot(DJ.fcst)
lines(DJ.test.ts, col = "red")
DJ.fcst
DJ.test.ts
DJ.fcst[1]
DJ.fcst$fitted
DJ.fcst$mean
print(DJ.fcst)
data.frame(DJ.fcst$mean, DJ.fcst$lower, DJ.fcst$upper)
DJ.fcst$lower
View(DJ.fcst$lower)
View(DJ.fcst$lower)
View(DJ.fcst$mean)
DJ.fcst$mean
time(DJ.fcst$mean)
View(time(DJ.fcst$mean))
attr(DJ.fcst$mea)
attr(DJ.fcst$mean)
attr(DJ.fcst$mean, "tsp")
DJ.test.ts[c(1,13)]
DJ.test.ts
length(DJ.test.ts)
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
library(Biostrings)
reverse("AAAGTTCGTCTTCTGCCG")
reverse("AGTTCGTCTTCTGCCGTA")
reverse("GTATGCTGGCGACCTTCA")
install.packages("quantreg")
library(quantreg)
data("engel")
View(engel)
plot(engel$income, engel$foodexp)
library(np)
install.packages("np")
library(np)
data("cps71")
attach(cps71)
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite("exomePeak")
.Library
a <- NA
a
is.na(a)
a == NA
a <- c(NA, NA)
a
is.na(a)
load("~/Documents/simu_result_MeTPeak.01.RData")
View(simu_result_MeTPeak$nb.max30.pi0.5$READS_COUNT)
View(simu_result_MeTPeak$nb.max100.pi0.5$READS_COUNT)
View(simu_result_MeTPeak$nb.max100.pi0.5$READS_COUNT)
x <- simu_result_MeTPeak$nb.max100.pi0.5$READS_COUNT
load("~/Documents/simu_result_MeTPeak.02.RData")
y <- simu_result_MeTPeak$nb.max100.pi0.5$READS_COUNT
head(x)
head(y)
tail(x)
tail(y)
load("~/Documents/simu_result_MeTPeak.08.RData")
z <- simu_result_MeTPeak$nb.max100.pi0.5$READS_COUNT
tail(z)
sum(x$log.fdr == x$log.fdr)
load("~/Documents/simu_result_MeTPeak.01.RData")
x <- simu_result_MeTPeak$poisson.max30.pi0.5$READS_COUNT
load("~/Documents/simu_result_MeTPeak.06.RData")
y <- simu_result_MeTPeak$poisson.max30.pi0.5$READS_COUNT
sum(x$log.fdr == x$log.fdr)
dim(x)
View(x)
x <- simu_result_MeTPeak$zinb.max30.pi0.5$READS_COUNT
load("~/Documents/simu_result_MeTPeak.09.RData")
y <- simu_result_MeTPeak$zinb.max30.pi0.5$READS_COUNT
sum(x$log.fdr == y$log.fdr)
dim(x)
dim(y)
View(x)
which(!x$log.fdr == y$log.fdr)
View(y)
View(x)
exp(-2)
z <- mean(x,y)
a <- data.frame()
b <- data.frame(matrix((1:9, 3, 3)))
b <- data.frame(matrix(1:9, 3, 3))
b
cbind(a,b)
a <- matrix(NA, 0, 3)
a <- data.frame(a)
a <- cbind(b)
View(a)
a <- matrix(NA, 0, 0)
a <- data.frame(a)
a <- cbind(b)
a <- c()
a <- cbind(a, b)
a <- matrix(NA, 0, 0)
a <- data.frame(a)
cbind(a, b)
a <- NULL
cbind(a,b)
a <- data.frame(matrix(NA, 3, 0))
cbind(a ,b)
load("~/Downloads/real_data.Rdata")
View(data_list)
library(parallel)
detectCores()
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
parLapply(cl, 2:4,
function(exponent)
2^exponent)
system.time(parLapply(cl, 2:4, function(exponent) 2^exponent))
parLapply(cl, 2:4, function(x) (1:100)^x)
system.time(parLapply(cl, 2:4, function(x) (1:100)^x))
system.time(parLapply(cl, 2:4, function(x) (rep(1:100,10))^x))
system.time(parLapply(cl, 2:4, function(x) (rep(1:1000,1000))^x))
system.time(parLapply(cl, 2:4, function(x) (rep(1:10000,10000))^x))
system.time(parLapply(cl, 2:4, function(x) (rep(1:5000,5000))^x))
c <- c()
system.time(for (x in 2:4) { c <- c((rep(1:5000,5000))^x) })
system.time(for (x in 2:4) { print((rep(1:10000,10000))^x) })
system.time(parLapply(cl, 2:4, function(x) (rep(1:10000,10000))^x))
R.version.string
setwd("~/Documents/Note/STAT6338/HW2")
low <- c(7.6, 8.2, 6.8, 5.8, 6.9, 6.6, 6.3, 7.7, 6.0)
moderate <- c(6.7, 8.1, 9.4, 8.6, 7.8, 7.7, 8.9, 7.9, 8.3, 8.7, 7.1, 8.4)
high <- c(8.5, 9.7, 10.1, 7.8, 9.6, 9.5)
factor(c(low, moderate, high))
plot(low)
factor(c(low, moderate, high), labels = c(rep("low", 9), rep("moderate", 12), rep("high", 6)))
length(low)
length(moderate)
length(high)
c(rep("low", 9), rep("moderate", 12), rep("high", 6))
factor(c(low, moderate, high), levels = c(rep("low", 9), rep("moderate", 12), rep("high", 6)))
prod.data <- data.frame(prod = c(low, moderate, high), group = c(rep("low", 9), rep("moderate", 12), rep("high", 6)))
prod.data
plot(prod.data$group, prod.data$prod)
points(prod.data$group, prod.data$prod)
points(prod.data$group, prod.data$prod)
plot(prod.data$group, prod.data$prod, type = "p")
plot(prod.data$group, prod.data$prod, type = "b")
plot(prod.data$prod, type = "b")
plot(prod.data$prod, prod.data$group)
axis(1)
axis(2)
plot(prod.data$prod, prod.data$group, axis = TRUE)
plot(prod.data$prod, prod.data$group, axes = TRUE)
warnings()
plot(prod.data$prod, prod.data$group, axes = FALSE)
plot(prod.data$prod, prod.data$group, axes = TRUE)
plot.new()
points(prod.data$group, prod.data$prod)
boxplot(prod.data$group, prod.data$prod)
plot(prod.data$group, prod.data$prod)
point(prod.data$group, prod.data$prod)
points(prod.data$group, prod.data$prod)
library(ggplot2)
prod.data$group
prod.data
prod.data$prod
prod.data$group
prod.data <- data.frame(prod = c(low, moderate, high), group = c(rep("low", 9), rep("moderate", 12), rep("high", 6)))
prod.data
prod.data$group
levels(prod.data$group)
levels(prod.data$group) <- c("low", "moderate", "high")
prod.data$group
prod.data
prod.data <- data.frame(prod = c(low, moderate, high), group = c(rep("low", 9), rep("moderate", 12), rep("high", 6)))
prod.data
prod.data$group
group <- c(rep("low", 9), rep("moderate", 12), rep("high", 6))
group
group <- factor(c(rep("low", 9), rep("moderate", 12), rep("high", 6)))
group
group <- factor(c(rep("low", 9), rep("moderate", 12), rep("high", 6)), levels = c("low", "moderate", "high"))
group
prod.data <- data.frame(prod = c(low, moderate, high), group = group)
prod.data$group
plot(prod.data$prod, prod.data$group)
plot(prod.data$group, prod.data$prod)
points(prod.data$group, prod.data$prod, new = TRUE)
plot(prod.data$group, prod.data$prod)
plot(prod.data$group, prod.data$prod, col = "white")
plot(prod.data$group, prod.data$prod, col = "white")
points(prod.data$group, prod.data$prod, new = TRUE)
plot(prod.data$group, prod.data$prod, type = "p")
prod.data
plot(prod.data$group, prod.data$prod, pch = 16)
plot(prod.data$group, prod.data$prod, pch = 18)
plot(0, 0, xlim = c(0,2), ylim = c(5,12))
points(prod.data$group, prod.data$prod, new = TRUE)
p <- ggplot(aes(x = prod, data = prod.data, color = group)) + geom_point()
p <- ggplot(data = prod.data, aes(x = prod, color = group)) + geom_point()
plot(p)
p <- ggplot(data = prod.data, aes(x = group, x = prod)) + geom_point()
p <- ggplot(data = prod.data, aes(x = group, y = prod)) + geom_point()
plot(p)
library(ggplot2)
low <- c(7.6, 8.2, 6.8, 5.8, 6.9, 6.6, 6.3, 7.7, 6.0)
moderate <- c(6.7, 8.1, 9.4, 8.6, 7.8, 7.7, 8.9, 7.9, 8.3, 8.7, 7.1, 8.4)
high <- c(8.5, 9.7, 10.1, 7.8, 9.6, 9.5)
group <- factor(c(rep("low", 9), rep("moderate", 12), rep("high", 6)), levels = c("low", "moderate", "high"))
prod.data <- data.frame(productivity = c(low, moderate, high), group = group)
p <- ggplot(data = prod.data, aes(x = group, y = prod)) + geom_point()
plot(p)
aggregate(prod.data$productivity, by = list(prod.data$group), FUN = mean)
aggregate(prod.data$productivity, by = list(prod.data$group), FUN = mean)
aggregate(prod.data$productivity, by = list(prod.data$group), FUN = mean)
aggregate(prod.data$productivity, by = list(prod.data$group), FUN = mean)
aggregate(prod.data$productivity, by = list(prod.data$group), FUN = mean)
mean.low <- mean(low)
mean.moderate <- mean(moderate)
mean.high <- mean(high)
mean.low
print(c(mean.low, mean.moderate, mean.high))
aov(productivit ~ group, data = prod.data)
aov(productivity ~ group, data = prod.data)
anova.model <- aov(productivity ~ group, data = prod.data)
summary(anova.model)
rep(c("blue", "green", "orange"), 5)
rep(c("blue", "green", "orange"), each = 5)
resp.data <- data.frame(response = c(blue, green, orange), group = group)
blue <- c(28, 26, 31, 27, 35)
green <- c(34, 29, 25, 31, 29)
orange <- c(31, 25, 27, 29, 28)
group <- factor(rep(c("blue", "green", "orange"), each = 5), levels = c("blue", "green", "orange"))
resp.data <- data.frame(response = c(blue, green, orange), group = group)
p <- ggplot(data = resp.data, aes(x = group, y = response)) + geom_point()
plot(p)
mean.blue <- mean(blue)
mean.blue
prod.data
lm.model <- lm(productivit ~ group, data = prod.data)
lm.model <- lm(productivity ~ group, data = prod.data)
summary(lm.model)
anova(lm.model)
prod.data$group
as.numeric(prod.data$group)
factor(prod.data$group, levels = c("high", "low", "moderate"))
prod.data$group <- factor(prod.data$group, levels = c("high", "low", "moderate"))
lm.model <- lm(productivity ~ group, data = prod.data)
summary(lm.model)
Y <- c(low, moderate, high)
Y
rep(c(1,1,0), each = 9)
rep(c(1,1,0), 9)
X <- c(rep(c(1, 1, 0), 9), rep(c(1, 0, 1), 12), rep(c(1, -1, -1), 6))
X
matrix(X, ncol = 3)
matrix(X, ncol = 3, byrow = TRUE)
X <- matrix(X, ncol = 3, byrow = TRUE)
lm.model <- lm(Y ~ X)
summary(lm.model)
url <- "http://www.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2016%20Data%20Sets/CH16PR11.txt"
fill.data <- read.table(url, sep = "\t")
fill.data
colnames(fill.data)
fill.data <- read.table(url, sep = "\t", col.names = FALSE)
fill.data
fill.data <- read.table(url, sep = "\t", col.names = c("fill", "group", "id"))
fill.data <- read.table(url, sep = "\t")
dim(fill.data)
fill.data <- strsplit(read.table(url, sep = "\t")[,1], split = " ")
read.table(url, sep = "\t")[,1]
fill.data <- strsplit(read.table(url, sep = "\t", stringsAsFactors = FALSE)[,1], split = " ")
fill.data
x <- fill.data[[1]]
x
x[x!=""]
as.numeric(x[x!=""])
fill.data <- sapply(fill.data, FUN = as.numeric(x[x!=""]))
fill.data <- sapply(fill.data, FUN = function(x) as.numeric(x[x!=""]))
fill.data
class(fill.data)
View(fill.data)
url <- "http://www.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2016%20Data%20Sets/CH16PR11.txt"
fill.data <- strsplit(read.table(url, sep = "\t", stringsAsFactors = FALSE)[,1], split = " ")
fill.data <- t(sapply(fill.data, FUN = function(x) as.numeric(x[x!=""])))
colnames(fill.data) <- c("fill", "group", "id")
fill.data
url <- "http://www.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2016%20Data%20Sets/CH16PR11.txt"
fill.data <- strsplit(read.table(url, sep = "\t", stringsAsFactors = FALSE)[,1], split = " ")
fill.data <- data.frame(t(sapply(fill.data, FUN = function(x) as.numeric(x[x!=""]))))
colnames(fill.data) <- c("fill", "group", "id")
aggregate(fill.data$fill, by = fill.data$group, FUN = mean)
aggregate(fill.data$fill, by = list("group"), FUN = mean)
aggregate(fill, by = list("group"), FUN = mean, data = fill.data)
aggregate(fill.data$fill, by = list("group"), FUN = mean, data = fill.data)
aggregate(fill.data$fill, by = list(fill.data$group), FUN = mean, data = fill.data)
aggregate(fill.data$fill, by = list(fill.data$group), FUN = mean)
fill.data
aggregate(fill.data$fill, by = list(fill.data$group), FUN = mean)
aggregate(fill.data$fill, by = list(group = fill.data$group), FUN = mean)
fill.data
